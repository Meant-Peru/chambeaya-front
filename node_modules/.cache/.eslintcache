[{"/Users/harold/projects/Meant/chambeaya_frontend/src/index.tsx":"1","/Users/harold/projects/Meant/chambeaya_frontend/src/App.tsx":"2","/Users/harold/projects/Meant/chambeaya_frontend/src/redux/store/store.ts":"3","/Users/harold/projects/Meant/chambeaya_frontend/src/routers/AppRouter.tsx":"4","/Users/harold/projects/Meant/chambeaya_frontend/src/redux/slices/authSlice.ts":"5","/Users/harold/projects/Meant/chambeaya_frontend/src/redux/slices/salesSlice.ts":"6","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/corporativo.tsx":"7","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/addJob.tsx":"8","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/accountSales.tsx":"9","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/register.tsx":"10","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/home.tsx":"11","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/myaccount.tsx":"12","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/login.tsx":"13","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/searchJob.tsx":"14","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/applyJob.tsx":"15","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/detailPost.tsx":"16","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/bussiness.tsx":"17","/Users/harold/projects/Meant/chambeaya_frontend/src/helpers/constants.ts":"18","/Users/harold/projects/Meant/chambeaya_frontend/src/helpers/localStorage.ts":"19","/Users/harold/projects/Meant/chambeaya_frontend/src/hooks/useTab.ts":"20","/Users/harold/projects/Meant/chambeaya_frontend/src/util/job.service.ts":"21","/Users/harold/projects/Meant/chambeaya_frontend/src/util/auth.service.ts":"22","/Users/harold/projects/Meant/chambeaya_frontend/src/hooks/usePostJob.ts":"23","/Users/harold/projects/Meant/chambeaya_frontend/src/util/publication.service.ts":"24","/Users/harold/projects/Meant/chambeaya_frontend/src/hooks/useAuth.tsx":"25","/Users/harold/projects/Meant/chambeaya_frontend/src/components/ListCompany.tsx":"26","/Users/harold/projects/Meant/chambeaya_frontend/src/components/hero.tsx":"27","/Users/harold/projects/Meant/chambeaya_frontend/src/components/listPost.tsx":"28","/Users/harold/projects/Meant/chambeaya_frontend/src/components/MyApply.tsx":"29","/Users/harold/projects/Meant/chambeaya_frontend/src/components/PostCompany.tsx":"30","/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/styled.tsx":"31","/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/footer.tsx":"32","/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/header.tsx":"33","/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/cardPost.tsx":"34","/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/atom/checkButton.tsx":"35","/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/atom/tag.tsx":"36","/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/atom/button.tsx":"37","/Users/harold/projects/Meant/chambeaya_frontend/src/util/user.service.ts":"38","/Users/harold/projects/Meant/chambeaya_frontend/src/enviroment/enviroment.ts":"39","/Users/harold/projects/Meant/chambeaya_frontend/src/hooks/useSales.tsx":"40","/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/NavbarComponent.tsx":"41","/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/atom/card.tsx":"42","/Users/harold/projects/Meant/chambeaya_frontend/src/util/sales.service.ts":"43"},{"size":460,"mtime":1654645903069,"results":"44","hashOfConfig":"45"},{"size":175,"mtime":1654645903028,"results":"46","hashOfConfig":"45"},{"size":486,"mtime":1654645903083,"results":"47","hashOfConfig":"45"},{"size":1710,"mtime":1654645903084,"results":"48","hashOfConfig":"45"},{"size":1789,"mtime":1654645903081,"results":"49","hashOfConfig":"45"},{"size":829,"mtime":1654645903081,"results":"50","hashOfConfig":"45"},{"size":3314,"mtime":1654645903077,"results":"51","hashOfConfig":"45"},{"size":16692,"mtime":1654813791405,"results":"52","hashOfConfig":"45"},{"size":3369,"mtime":1654645903075,"results":"53","hashOfConfig":"45"},{"size":2858,"mtime":1654645903079,"results":"54","hashOfConfig":"45"},{"size":385,"mtime":1654645903078,"results":"55","hashOfConfig":"45"},{"size":5595,"mtime":1654645903079,"results":"56","hashOfConfig":"45"},{"size":1462,"mtime":1654645903078,"results":"57","hashOfConfig":"45"},{"size":146,"mtime":1654645903080,"results":"58","hashOfConfig":"45"},{"size":7124,"mtime":1654645903076,"results":"59","hashOfConfig":"45"},{"size":4606,"mtime":1654645903077,"results":"60","hashOfConfig":"45"},{"size":3244,"mtime":1654645903076,"results":"61","hashOfConfig":"45"},{"size":521,"mtime":1654813791404,"results":"62","hashOfConfig":"45"},{"size":854,"mtime":1654645903066,"results":"63","hashOfConfig":"45"},{"size":299,"mtime":1654645903068,"results":"64","hashOfConfig":"45"},{"size":1900,"mtime":1654813791405,"results":"65","hashOfConfig":"45"},{"size":777,"mtime":1654838251333,"results":"66","hashOfConfig":"45"},{"size":1742,"mtime":1654645903068,"results":"67","hashOfConfig":"45"},{"size":1048,"mtime":1654645903105,"results":"68","hashOfConfig":"45"},{"size":2554,"mtime":1654645903067,"results":"69","hashOfConfig":"45"},{"size":1707,"mtime":1654645903056,"results":"70","hashOfConfig":"45"},{"size":1141,"mtime":1654645903059,"results":"71","hashOfConfig":"45"},{"size":2324,"mtime":1654645903059,"results":"72","hashOfConfig":"45"},{"size":7887,"mtime":1654645903057,"results":"73","hashOfConfig":"45"},{"size":3936,"mtime":1654645903058,"results":"74","hashOfConfig":"45"},{"size":3834,"mtime":1654645903064,"results":"75","hashOfConfig":"45"},{"size":1223,"mtime":1654645903063,"results":"76","hashOfConfig":"45"},{"size":1520,"mtime":1654645903064,"results":"77","hashOfConfig":"45"},{"size":712,"mtime":1654645903063,"results":"78","hashOfConfig":"45"},{"size":407,"mtime":1654645903062,"results":"79","hashOfConfig":"45"},{"size":327,"mtime":1654645903062,"results":"80","hashOfConfig":"45"},{"size":777,"mtime":1654645903060,"results":"81","hashOfConfig":"45"},{"size":718,"mtime":1654645903106,"results":"82","hashOfConfig":"45"},{"size":202,"mtime":1654838362429,"results":"83","hashOfConfig":"45"},{"size":707,"mtime":1654645903068,"results":"84","hashOfConfig":"45"},{"size":621,"mtime":1654645903059,"results":"85","hashOfConfig":"45"},{"size":315,"mtime":1654645903061,"results":"86","hashOfConfig":"45"},{"size":365,"mtime":1654645903106,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"16k5ufd",{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"91"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"91"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"91"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"91"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"91"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"91"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"91"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"91"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"91"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"91"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"91"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"/Users/harold/projects/Meant/chambeaya_frontend/src/index.tsx",[],[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/App.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/redux/store/store.ts",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/routers/AppRouter.tsx",["230","231","232"],[],"import { useSelector } from 'react-redux';\nimport { Routes, Route, BrowserRouter as Router, Link, Navigate } from 'react-router-dom';\nimport AccountSales from '../pages/accountSales';\nimport AddJob from '../pages/addJob';\nimport ApplyJob from '../pages/applyJob';\nimport BussinessSignUp from '../pages/bussiness';\nimport Corporativo from '../pages/corporativo';\nimport DetailPost from '../pages/detailPost';\nimport Home from '../pages/home';\nimport Login from '../pages/login';\nimport MyAccount from '../pages/myaccount';\nimport Register from '../pages/register';\nimport SearchJob from '../pages/searchJob';\nimport { RootState } from '../redux/store/store';\n\nexport const AppRouter = () => {\n\tconst { status } = useSelector((state: RootState) => state.auth);\n\n\t// if (status === 'checking') {\n\t// \treturn <Login />;\n\t// }\n\n\treturn (\n\t\t<>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" element={<Home />} />\n\t\t\t\t<Route index element={<Home />} />\n\t\t\t\t<Route path=\"register\" element={<Register />} />\n\t\t\t\t<Route path=\"searchjob\" element={<SearchJob />} />\n\t\t\t\t<Route path=\"login\" element={<Login />} />\n\t\t\t\t<Route path=\"myaccount\" element={<MyAccount />} />\n\t\t\t\t<Route path=\"account-sales\" element={<AccountSales />} />\n\t\t\t\t<Route path=\"corporativo\" element={<Corporativo />} />\n\t\t\t\t<Route path=\"bussiness\" element={<BussinessSignUp />} />\n\t\t\t\t<Route path=\"addJob\" element={<AddJob />} />\n\t\t\t\t<Route path=\"apply/:id\" element={<ApplyJob />} />\n\t\t\t\t<Route path=\"detail-post/:id\" element={<DetailPost />} />\n\t\t\t\t<Route path=\"*\" element={<NoMatch />} />\n\t\t\t</Routes>\n\t\t</>\n\t);\n};\n\nconst NoMatch = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Nothing to see here!</h2>\n\t\t\t<p>\n\t\t\t\t<Link to=\"/\">Go to the home page</Link>\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n","/Users/harold/projects/Meant/chambeaya_frontend/src/redux/slices/authSlice.ts",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/redux/slices/salesSlice.ts",["233"],[],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { UserGenerico } from '../../interfaces/User';\nimport { CompanySales } from '../../interfaces/CompanySales';\n\ninterface SalesState {\n\tcompanies: CompanySales[];\n\tloading: boolean;\n\terrorMessage: string;\n}\n\nconst initialState: SalesState = {\n\terrorMessage: '',\n\tloading: false,\n\tcompanies: [],\n};\n\nconst salesSlice = createSlice({\n\tname: 'salesSlice',\n\tinitialState,\n\treducers: {\n\t\tloadCompanies: (state, { payload }: PayloadAction<any>) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcompanies: payload.companies,\n\t\t\t\tloading: false,\n\t\t\t\terrorMessage: '',\n\t\t\t};\n\t\t},\n\t\tchangeLoading: (state) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloadingLogin: true,\n\t\t\t};\n\t\t},\n\t},\n});\n\nexport const { loadCompanies, changeLoading } = salesSlice.actions;\n\nexport default salesSlice.reducer;\n","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/corporativo.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/pages/addJob.tsx",["234","235","236","237","238","239","240","241","242"],[],"import * as React from 'react';\nimport Header from '../components/shared/header';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport boxEmpty from './../assets/box-empty.svg';\nimport ilusEmpty from './../assets/empty-state.svg';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport TextField from '@mui/material/TextField';\nimport { Hint } from 'react-autocomplete-hint';\n\nimport { Txtfield, DropdownMenu, DropdownItem, TxtArea, BtnPrimary } from './../components/shared/styled';\nimport 'react-tabs/style/react-tabs.css';\nimport './../sass/pages/_addJob.scss';\nimport Footer from '../components/shared/footer';\nimport ButtonComponent from '../components/shared/atom/button';\n\nimport { addJob, postJobCompany } from './../util/job.service';\nimport { getCategory, getPosition, createPosition, getSkill } from '../util/publication.service';\nimport { Response } from '../interfaces/Response';\nimport { Category } from '../interfaces/Category';\nimport { Position } from '../interfaces/Position';\nimport TagComponent from '../components/shared/atom/tag';\nimport { respSkill, Skill } from '../interfaces/Skill';\nimport { PostJob } from '../interfaces/PostJob';\nimport { CREATE_POST } from '../helpers/constants';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function AddJob() {\n\tconst navigate = useNavigate();\n\tconst [open, setOpen] = React.useState(false);\n\tconst [encounter, setEncounter] = React.useState(true);\n\tconst [categorys, setCategorys] = React.useState<Category[]>([]);\n\tconst [positions, setPositions] = React.useState<Position[]>([]);\n\tconst [skills, setSkills] = React.useState<any[]>([]);\n\tconst [skillSelected, setSkillSelected] = React.useState<Skill[]>([]);\n\tconst loading = open && skills.length === 0;\n\n\tconst [form, setForm] = React.useState({\n\t\ttitle: '',\n\t\tdescription: '',\n\t\tmodality: '',\n\t\ttimeEstimated: '',\n\t\tsalaryRange: '',\n\t\tfuntionsPost: '',\n\t\tlocation: '',\n\t\tpriority: 1,\n\t});\n\n\tconst [positionSelected, setPositionSelected] = React.useState<any>({\n\t\tid: '',\n\t\tid_category: '',\n\t\tid_user: '',\n\t\tnamePosition: '',\n\t\tdescription: '',\n\t});\n\n\tconst [job, setJob] = React.useState({\n\t\tdescription: '',\n\t\tidCompany: '',\n\t\tmodality: '',\n\t\ttimeEstimated: '',\n\t\tsalaryRange: '',\n\t\tfuntionsPost: '',\n\t\tidCategory: '',\n\t\tidPosition: '',\n\t\tidSkills: '',\n\t});\n\n\tconst [position, setPosition] = React.useState({\n\t\tidCategory: '',\n\t\tnamePosition: '',\n\t\tdescription: '',\n\t});\n\n\tconst [skillPayload, setSkillPayload] = React.useState({ idCategory: '', idPositon: '' });\n\n\tReact.useEffect(() => {\n\t\t(async () => {\n\t\t\tawait getCategoryAll();\n\t\t})();\n\t}, []);\n\n\tconst getCategoryAll = async () => {\n\t\tconst response: Response = await getCategory();\n\t\tif (response.status) setCategorys(response.data);\n\t};\n\n\tconst handleEvent = (e: any) => {\n\t\tsetJob({\n\t\t\t...job,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\n\tconst handleEventFrom = (e: any) => {\n\t\tsetForm({\n\t\t\t...form,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\n\tconst handleSearch = (e: any, value: any) => {\n\t\tsetEncounter(true);\n\t\t// const value = e.target.value;\n\t\t// console.log({ value });\n\t\tsetPosition({ ...position, namePosition: value });\n\t\tif (positions.length === 0 && value.length > 0) setEncounter(false);\n\n\t\tfor (let index in positions) {\n\t\t\tconst item = positions[index];\n\t\t\tconst title = item.namePosition;\n\t\t\tif (value.length != 0 && title.length != 0) {\n\t\t\t\tif (title.toLowerCase().search(value.toLowerCase()) != -1) {\n\t\t\t\t\tsetSkillPayload({ ...skillPayload, idPositon: item.id });\n\t\t\t\t\tsetPositionSelected(item);\n\t\t\t\t\tsetEncounter(true);\n\t\t\t\t\tconsole.log({ skillPayload });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsetEncounter(false);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handlePosition = async (event: any) => {\n\t\tconst value = event.target.value;\n\t\tsetPositions([]);\n\t\tsetSkills([]);\n\t\tsetSkillSelected([]);\n\t\tif (value !== '0') {\n\t\t\tsetPosition({ ...position, idCategory: value });\n\t\t\tsetSkillPayload({ ...skillPayload, idCategory: value });\n\t\t\tconst response: Response = await getPosition({ idCategory: value });\n\t\t\tsetPositions(response.data);\n\t\t}\n\t};\n\n\tconst addSkill = async (e: any, value: any) => {\n\t\t// const value = event.target.value;\n\t\tconsole.log({ value });\n\t\tif (value !== '0') {\n\t\t\tconst select: Skill = skills.find((k: Skill) => k.nameSkill.toLowerCase() === value.toLowerCase());\n\t\t\tconsole.log({ select });\n\t\t\tif (select) {\n\t\t\t\tconst uniqe: Skill = skillSelected.find((k: Skill) => k.id === select.id);\n\t\t\t\tconsole.log({ uniqe });\n\t\t\t\tif (!uniqe) {\n\t\t\t\t\tsetSkillSelected([...skillSelected, select]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// console.log({ skillSelected });\n\t};\n\n\tconst addPosition = async () => {\n\t\tconst response: Response = await createPosition(position);\n\t\tif (response.status) {\n\t\t\tconst response: Response = await getPosition({ idCategory: position.idCategory });\n\t\t\tsetPositions(response.data);\n\t\t}\n\t};\n\n\tconst getSkills = async () => {\n\t\tconsole.log({ positionSelected });\n\t\tsetSkillPayload({ ...skillPayload, idPositon: positionSelected.id, idCategory: positionSelected.idCategory });\n\t\t/* TODO: */\n\t\t// console.log({ idPositon: '55915275-71b2-c739-b4df-5202ecc5e9d' }, { idCategory: '8b525a9e-f535-b3be-c756-71011b442339' });\n\t\t// setSkillPayload({ ...skillPayload, idPositon: '55915275-71b2-c739-b4df-5202ecc5e9d', idCategory: '8b525a9e-f535-b3be-c756-71011b442339' });\n\t};\n\n\tReact.useEffect(() => {\n\t\tlet active = true;\n\n\t\tif (!loading) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t(async () => {\n\t\t\tconsole.log(skillPayload.idCategory, skillPayload.idPositon);\n\t\t\tif (skillPayload.idCategory !== '' || skillPayload.idPositon !== '') {\n\t\t\t\tconst response = await getSkill(skillPayload);\n\t\t\t\tconst skillsData: respSkill = response.data;\n\t\t\t\tconst skillsArray: Skill[] = [];\n\t\t\t\tif (skillsData.skillGeneral.length > 0) {\n\t\t\t\t\tfor (let i = 0; i < skillsData.skillGeneral.length; i++) {\n\t\t\t\t\t\tskillsArray.push({ ...skillsData.skillGeneral[i], level: 'primary' });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (skillsData.skillPosition.length > 0) {\n\t\t\t\t\tfor (let i = 0; i < skillsData.skillPosition.length; i++) {\n\t\t\t\t\t\tskillsArray.push({ ...skillsData.skillPosition[i], level: 'secondary' });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (skillsData.skillPositionUser.length > 0) {\n\t\t\t\t\tfor (let i = 0; i < skillsData.skillPositionUser.length; i++) {\n\t\t\t\t\t\tskillsArray.push({ ...skillsData.skillPositionUser[i], level: 'terceary' });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst uniquesSkills = [...new Map(skillsArray.map((i: Skill) => [i.id, i])).values()];\n\t\t\t\t// console.log({ uniquesSkills });\n\t\t\t\tsetSkills(uniquesSkills);\n\t\t\t}\n\t\t})();\n\n\t\treturn () => {\n\t\t\tactive = false;\n\t\t};\n\t}, [skillPayload.idPositon, loading]);\n\n\tReact.useEffect(() => {\n\t\tif (!open) {\n\t\t\t//   setOptions([]);\n\t\t}\n\t}, [open]);\n\n\tconst handleCreatePost = async () => {\n\t\tif (form.modality !== '0') {\n\t\t\tconst sendData: PostJob = {\n\t\t\t\ttitle: form.title,\n\t\t\t\tdescription: form.description,\n\t\t\t\tmodality: form.modality,\n\t\t\t\ttimeEstimated: form.timeEstimated,\n\t\t\t\tsalaryRange: form.salaryRange,\n\t\t\t\tfuntionsPost: form.funtionsPost,\n\t\t\t\tidCategory: skillPayload.idCategory,\n\t\t\t\tidPosition: skillPayload.idPositon,\n\t\t\t\tlocation: form.location,\n\t\t\t\tpriority: form.priority,\n\t\t\t\tidSkills: [...skillSelected.map((i) => i.id)],\n\t\t\t};\n\t\t\tconsole.log({ sendData });\n\t\t\tconst resp = await postJobCompany(sendData);\n\t\t\tconsole.log({ resp });\n\t\t\tif (resp.data.message === CREATE_POST) {\n\t\t\t\talert('Se creo el publicación correctamente...');\n\t\t\t\tnavigate('/myaccount', { replace: true });\n\t\t\t} else {\n\t\t\t}\n\t\t} else {\n\t\t\talert('Seleccione Modalidad');\n\t\t}\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Header />\n\t\t\t<section className=\"addJobPage\">\n\t\t\t\t<Tabs defaultIndex={1}>\n\t\t\t\t\t<TabList className={'mb-5'}>\n\t\t\t\t\t\t<aside className=\"sideBarMenu mb-5\">\n\t\t\t\t\t\t\t<h3 className=\"mb-2\">Mi Cuenta</h3>\n\t\t\t\t\t\t\t<span>Gestiona tu cuenta</span>\n\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t<div className=\"list\">\n\t\t\t\t\t\t\t<Tab>Datos generales</Tab>\n\t\t\t\t\t\t\t<Tab>Mis publicaciones</Tab>\n\t\t\t\t\t\t\t<Tab>Proyectos</Tab>\n\t\t\t\t\t\t\t<Tab>Facturación</Tab>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</TabList>\n\n\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t<section className=\"sectionTab\">\n\t\t\t\t\t\t\t<aside className=\"mb-5\">\n\t\t\t\t\t\t\t\t<article className=\"headSection\">\n\t\t\t\t\t\t\t\t\t<h2>Datos Generales</h2>\n\t\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\t</aside>\n\n\t\t\t\t\t\t\t<p>Datos Personales</p>\n\t\t\t\t\t\t\t<aside className=\"FormsRow mt-3\">\n\t\t\t\t\t\t\t\t<Txtfield onChange={handleEvent} name=\"name\" placeholder=\"Nombres\" />\n\t\t\t\t\t\t\t\t<Txtfield placeholder=\"Apellidos\" />\n\t\t\t\t\t\t\t</aside>\n\n\t\t\t\t\t\t\t<aside className=\"FormsRow mt-2 mb-5\">\n\t\t\t\t\t\t\t\t<Txtfield placeholder=\"Correo electrónico\" />\n\t\t\t\t\t\t\t\t<Txtfield placeholder=\"Teléfono\" />\n\t\t\t\t\t\t\t</aside>\n\n\t\t\t\t\t\t\t<p>Datos de Pago</p>\n\t\t\t\t\t\t\t<aside className=\"FormsRow mt-3\">\n\t\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t\t<DropdownItem>Tipo de comprobante</DropdownItem>\n\t\t\t\t\t\t\t\t\t<DropdownItem>Recibo por Honorarios</DropdownItem>\n\t\t\t\t\t\t\t\t\t<DropdownItem>Factura</DropdownItem>\n\t\t\t\t\t\t\t\t\t<DropdownItem>Recibo</DropdownItem>\n\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t<Txtfield placeholder=\"Nro de comprobante\" />\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t<aside className=\"FormsRow mt-2 mb-5\">\n\t\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t\t<DropdownItem>Banco de destino</DropdownItem>\n\t\t\t\t\t\t\t\t\t<DropdownItem>Banco de Crédito del Perú</DropdownItem>\n\t\t\t\t\t\t\t\t\t<DropdownItem>BBVA</DropdownItem>\n\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t<Txtfield placeholder=\"Nro de cuenta\" />\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t<aside>\n\t\t\t\t\t\t\t\t<ButtonComponent type=\"primary\" label=\"Actualizar\" />\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</TabPanel>\n\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t<section className=\"sectionTab\">\n\t\t\t\t\t\t\t<aside className=\"mb-5\">\n\t\t\t\t\t\t\t\t<article className=\"headSection\">\n\t\t\t\t\t\t\t\t\t<h2>Nueva publicación</h2>\n\t\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t<aside className=\"FormsRow\">\n\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-3\">\n\t\t\t\t\t\t\t\t\t<p>Título</p>\n\t\t\t\t\t\t\t\t\t<Txtfield placeholder=\"Título de proyecto\" onChange={handleEventFrom} value={form.title} name=\"title\" />\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t<aside className=\"FormsRow\">\n\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-3\">\n\t\t\t\t\t\t\t\t\t<p>Rubro</p>\n\t\t\t\t\t\t\t\t\t<DropdownMenu onChange={handlePosition}>\n\t\t\t\t\t\t\t\t\t\t<DropdownItem value={'0'}>Elegir rubro</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t{categorys.map((category: Category) => (\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem key={category.id} value={category.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{category.nameCategory}\n\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-3\">\n\t\t\t\t\t\t\t\t\t<p>Posición</p>\n\t\t\t\t\t\t\t\t\t{/* <Txtfield placeholder=\"Posición\" /> */}\n\t\t\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\t\t\tdisableListWrap\n\t\t\t\t\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\t\t\t\t\tid=\"free-solo-2-demo\"\n\t\t\t\t\t\t\t\t\t\tdisableClearable\n\t\t\t\t\t\t\t\t\t\tclassName=\"border__none\"\n\t\t\t\t\t\t\t\t\t\toptions={positions.map((option) => option.namePosition)}\n\t\t\t\t\t\t\t\t\t\tonChange={(e, value) => handleSearch(e, value)}\n\t\t\t\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"border__none\"\n\t\t\t\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t\t\t\t// label=\"Nombre de la posición\"\n\t\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'search',\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisableUnderline: true,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleSearch}\n\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t'& .MuiInputLabel-root': {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t'& .MuiOutlinedInput-root': {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'& > fieldset': {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: 20,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t{/* <aside className=\"FormGroup\">\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<BtnPrimary onClick={getSkills}>Buscar</BtnPrimary>\n\t\t\t\t\t\t\t\t</aside> */}\n\t\t\t\t\t\t\t\t<aside className=\"FormGroup\">\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t{!encounter && <BtnPrimary onClick={addPosition}>Crear Posición</BtnPrimary>}\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t<aside className=\"FormsRow\">\n\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-3\">\n\t\t\t\t\t\t\t\t\t<p>Agregar Skill</p>\n\t\t\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetOpen(false);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tdisableListWrap\n\t\t\t\t\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\t\t\t\t\tid=\"free-solo-3-demo\"\n\t\t\t\t\t\t\t\t\t\tdisableClearable\n\t\t\t\t\t\t\t\t\t\tclassName=\"border__none\"\n\t\t\t\t\t\t\t\t\t\toptions={skills.map((k: Skill) => k.nameSkill)}\n\t\t\t\t\t\t\t\t\t\tonChange={(e, value) => addSkill(e, value)}\n\t\t\t\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"border__none\"\n\t\t\t\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'search',\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisableUnderline: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t'& .MuiInputLabel-root': {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t'& .MuiOutlinedInput-root': {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'& > fieldset': {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: 20,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t<aside className=\"FormsRow\">\n\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-3\">\n\t\t\t\t\t\t\t\t\t<p>Skills</p>\n\t\t\t\t\t\t\t\t\t<article className=\"skillsBox\">\n\t\t\t\t\t\t\t\t\t\t{skillSelected.map((e: Skill) => (\n\t\t\t\t\t\t\t\t\t\t\t<TagComponent type=\"highlight\" key={'tga-' + e.id} level={e.level} label={e.nameSkill} />\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\t\t\t{/* <DropdownMenu onChange={addSkill}>\n\t\t\t\t\t\t\t\t\t\t<DropdownItem value={'0'}>Agregar Skills</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t{skills.map((k: Skill) => (\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem key={k.id} value={k.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{k.nameSkill}\n\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</DropdownMenu> */}\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t</aside>\n\n\t\t\t\t\t\t\t<aside className=\"FormsRow\">\n\t\t\t\t\t\t\t\t<aside className=\"FormGroup--full mt-3\">\n\t\t\t\t\t\t\t\t\t<p>Descripción</p>\n\t\t\t\t\t\t\t\t\t<TxtArea placeholder=\"Descripción de la publicación\" onChange={handleEventFrom} value={form.description} name=\"description\" />\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t<aside className=\"FormsRow\">\n\t\t\t\t\t\t\t\t<aside className=\"FormGroup--full mt-3\">\n\t\t\t\t\t\t\t\t\t<p>Funciones</p>\n\t\t\t\t\t\t\t\t\t<TxtArea placeholder=\"Funciones a desempeñar\" onChange={handleEventFrom} value={form.funtionsPost} name=\"funtionsPost\" />\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t<aside className=\"mt-5\">\n\t\t\t\t\t\t\t\t<h4>Precisiones</h4>\n\t\t\t\t\t\t\t\t<aside className=\"FormsRow\">\n\t\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-3\">\n\t\t\t\t\t\t\t\t\t\t<p>Duración</p>\n\t\t\t\t\t\t\t\t\t\t<Txtfield placeholder=\"Duración de proyecto\" onChange={handleEventFrom} value={form.timeEstimated} name=\"timeEstimated\" />\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-3\">\n\t\t\t\t\t\t\t\t\t\t<p>Presupuesto</p>\n\t\t\t\t\t\t\t\t\t\t<Txtfield placeholder=\"Presupuesto\" onChange={handleEventFrom} value={form.salaryRange} name=\"salaryRange\" />\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-3\">\n\t\t\t\t\t\t\t\t\t\t<p>Modalidad</p>\n\t\t\t\t\t\t\t\t\t\t<DropdownMenu onChange={handleEventFrom} name=\"modality\">\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem value={'0'}>Elegir modalidad</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem value={'Híbrido'}>Híbrido</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem value={'Presencial'}>Presencial</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem value={'Remoto'}>Remoto</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t<aside className=\"mt-5\">\n\t\t\t\t\t\t\t\t{/* <ButtonComponent type=\"primary\" label=\"Agregar\" /> */}\n\t\t\t\t\t\t\t\t<BtnPrimary onClick={handleCreatePost}>Agregar</BtnPrimary>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t{/* <section className=\"apply\">\n              <img src={ilusEmpty} alt=\"empty\" />\n              <p>No se encontraron publicaciones</p>\n            </section> */}\n\t\t\t\t\t</TabPanel>\n\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t<section className=\"sectionTab\">\n\t\t\t\t\t\t\t<aside className=\"mb-5\">\n\t\t\t\t\t\t\t\t<article className=\"headSection\">\n\t\t\t\t\t\t\t\t\t<h2>Proyectos</h2>\n\t\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t<aside className=\"FormsRow\">\n\t\t\t\t\t\t\t\t<article className=\"proyects\">\n\t\t\t\t\t\t\t\t\t<img src={ilusEmpty} alt=\"empty\" />\n\t\t\t\t\t\t\t\t\t<p>Aún no ingresaste a algún proyecto</p>\n\t\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</TabPanel>\n\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t<section className=\"sectionTab\">\n\t\t\t\t\t\t\t<aside className=\"mb-5\">\n\t\t\t\t\t\t\t\t<article className=\"headSection\">\n\t\t\t\t\t\t\t\t\t<h2>Facturación</h2>\n\t\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t<aside className=\"FormsRow\">\n\t\t\t\t\t\t\t\t<article className=\"proyects\">\n\t\t\t\t\t\t\t\t\t<img src={ilusEmpty} alt=\"empty\" />\n\t\t\t\t\t\t\t\t\t<p>Tienes un plan free actualmente</p>\n\t\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</TabPanel>\n\t\t\t\t</Tabs>\n\t\t\t</section>\n\t\t\t<Footer />\n\t\t</React.Fragment>\n\t);\n}\n","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/accountSales.tsx",["243","244","245","246","247","248","249","250","251","252"],[],"import React, { Fragment, useEffect, useState } from 'react';\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs';\nimport Header from '../components/shared/header';\nimport ilusEmpty from './../assets/empty-state.svg';\nimport { Txtfield, TxtArea, DropdownMenu, DropdownItem, BtnPrimary } from '../components/shared/styled';\nimport './../sass/pages/_myAccount.scss';\nimport Footer from '../components/shared/footer';\n\nimport { COMPANY, POSTULANT } from '../helpers/constants';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../redux/store/store';\nimport { useAuth } from '../hooks/useAuth';\n\nimport PostCompany from '../components/PostCompany';\nimport MyApply from '../components/MyApply';\nimport ListCompany from '../components/ListCompany';\n\nexport default function AccountSales() {\n\tconst { user } = useSelector((state: RootState) => state.auth);\n\tconst { startLogout, startUpdateUser } = useAuth();\n\n\tconst [userSales, setUserSales] = useState({\n\t\t...user.dataUser,\n\t});\n\n\tconst handleEvent = (e: any) => {\n\t\tsetUserSales({\n\t\t\t...userSales,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\n\tconst handleUpdate = async () => {\n\t\tlet dataSend = { ...user, dataUser: { ...userSales } };\n\t\tconst respUpdate = await startUpdateUser(dataSend);\n\t\tconsole.log({ respUpdate });\n\t};\n\n\tconst handleLogout = () => startLogout();\n\n\tif (Object.keys(user.dataUser).length === 0) return <Navigate replace to=\"/login\" />;\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Header />\n\t\t\t<section className=\"myAccountPage\">\n\t\t\t\t<Tabs>\n\t\t\t\t\t<TabList className={'mb-5'}>\n\t\t\t\t\t\t<aside className=\"sideBarMenu mb-5\">\n\t\t\t\t\t\t\t<h3 className=\"mb-2\">Ventas</h3>\n\t\t\t\t\t\t\t<span>Gestionar Cartera</span>\n\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t<div className=\"list\">\n\t\t\t\t\t\t\t<Tab>Datos generales</Tab>\n\t\t\t\t\t\t\t<Tab>Mi cartera</Tab>\n\t\t\t\t\t\t\t<Tab>Proyectos</Tab>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<aside className=\"sideBarMenu mt-5 mb-5\">\n\t\t\t\t\t\t\t<a onClick={handleLogout}>Cerrar Sesión</a>\n\t\t\t\t\t\t</aside>\n\t\t\t\t\t</TabList>\n\n\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t<section className=\"sectionAccount\">\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<p>Datos personales</p>\n\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-3\">\n\t\t\t\t\t\t\t\t\t<Txtfield onChange={handleEvent} value={userSales.name} name=\"name\" placeholder=\"Nombres\" />\n\t\t\t\t\t\t\t\t\t<Txtfield onChange={handleEvent} value={userSales.lastName} name=\"lastName\" placeholder=\"Apellidos\" />\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-2 mb-5\">\n\t\t\t\t\t\t\t\t\t<Txtfield onChange={handleEvent} value={userSales.email} name=\"email\" placeholder=\"Correo electrónico\" />\n\t\t\t\t\t\t\t\t\t<Txtfield onChange={handleEvent} value={userSales.phone} name=\"phone\" placeholder=\"Teléfono\" />\n\t\t\t\t\t\t\t\t</aside>\n\n\t\t\t\t\t\t\t\t<aside>\n\t\t\t\t\t\t\t\t\t{/* <ButtonComponent  type=\"primary\" label=\"Actualizar\" /> */}\n\t\t\t\t\t\t\t\t\t<BtnPrimary onClick={handleUpdate}>Actualizar</BtnPrimary>\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</TabPanel>\n\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t{/* <section className=\"apply\">\n\t\t\t\t\t\t\t<img src={ilusEmpty} alt=\"empty\" />\n\t\t\t\t\t\t\t<p>No se encontraron postulaciones</p>\n\n\t\t\t\t\t\t</section> */}\n\t\t\t\t\t\t<ListCompany />\n\t\t\t\t\t</TabPanel>\n\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t<section className=\"proyects\">\n\t\t\t\t\t\t\t<img src={ilusEmpty} alt=\"empty\" />\n\t\t\t\t\t\t\t<p>Aún no ingresaste a algún proyecto</p>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</TabPanel>\n\t\t\t\t</Tabs>\n\t\t\t</section>\n\t\t\t<Footer />\n\t\t</React.Fragment>\n\t);\n}\n","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/register.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/pages/home.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/pages/myaccount.tsx",["253","254"],[],"import React, { Fragment, useEffect, useState } from 'react';\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs';\nimport Header from '../components/shared/header';\nimport ilusEmpty from './../assets/empty-state.svg';\nimport { Txtfield, TxtArea, DropdownMenu, DropdownItem, BtnPrimary } from '../components/shared/styled';\nimport './../sass/pages/_myAccount.scss';\nimport Footer from '../components/shared/footer';\n\nimport { COMPANY, POSTULANT } from '../helpers/constants';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../redux/store/store';\nimport { useAuth } from '../hooks/useAuth';\n\nimport PostCompany from '../components/PostCompany';\nimport MyApply from '../components/MyApply';\n\nexport default function MyAccount() {\n\tconst { user } = useSelector((state: RootState) => state.auth);\n\tconst { startLogout, startUpdateUser } = useAuth();\n\n\tconst [postulant, setPostulant] = useState({\n\t\t...user.dataUser,\n\t});\n\n\tconst [company, setCompany] = useState({\n\t\t...user.dataUser,\n\t});\n\n\tconst handleEvent = (e: any) => {\n\t\tsetCompany({\n\t\t\t...company,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\n\tconst handleEventPostulant = (e: any) => {\n\t\tsetPostulant({\n\t\t\t...postulant,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\n\tconst handleUpdate = async () => {\n\t\tlet dataSend;\n\t\tif (user.rol === POSTULANT) {\n\t\t\tdataSend = { ...user, dataUser: { ...postulant } };\n\t\t} else {\n\t\t\tdataSend = { ...user, dataUser: { ...company } };\n\t\t}\n\n\t\tconst respUpdate = await startUpdateUser(dataSend);\n\t\tconsole.log({ respUpdate });\n\t};\n\n\tconst handleLogout = () => {\n\t\tstartLogout();\n\t};\n\n\tif (Object.keys(user.dataUser).length === 0) return <Navigate replace to=\"/login\" />;\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Header />\n\t\t\t<section className=\"myAccountPage\">\n\t\t\t\t<Tabs>\n\t\t\t\t\t<TabList className={'mb-5'}>\n\t\t\t\t\t\t<aside className=\"sideBarMenu mb-5\">\n\t\t\t\t\t\t\t<h3 className=\"mb-2\">Mi Cuenta</h3>\n\t\t\t\t\t\t\t<span>Gestiona tu cuenta</span>\n\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t<div className=\"list\">\n\t\t\t\t\t\t\t<Tab>Datos generales</Tab>\n\t\t\t\t\t\t\t<Tab> {user?.rol === COMPANY ? 'Mis publicaciones' : 'Mis postulaciones'}</Tab>\n\t\t\t\t\t\t\t<Tab>Proyectos</Tab>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<aside className=\"sideBarMenu mt-5 mb-5\">\n\t\t\t\t\t\t\t<a onClick={handleLogout}>Cerrar Sesión</a>\n\t\t\t\t\t\t</aside>\n\t\t\t\t\t</TabList>\n\n\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t<section className=\"sectionAccount\">\n\t\t\t\t\t\t\t{user?.rol === COMPANY ? (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<p>Datos primarios</p>\n\t\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-3\">\n\t\t\t\t\t\t\t\t\t\t<Txtfield onChange={handleEvent} value={company.businessName} name=\"businessName\" placeholder=\"Nombre de empresa\" />\n\t\t\t\t\t\t\t\t\t\t<Txtfield onChange={handleEvent} value={company.ruc} name=\"ruc\" placeholder=\"Nro de Documento\" />\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-4 mb-4\">\n\t\t\t\t\t\t\t\t\t\t<TxtArea onChange={handleEvent} value={company.description} name=\"description\" placeholder=\"Descripción\" />\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-2 mb-5\">\n\t\t\t\t\t\t\t\t\t\t<Txtfield onChange={handleEvent} value={company.email} name=\"email\" placeholder=\"Correo electrónico\" />\n\t\t\t\t\t\t\t\t\t\t<Txtfield onChange={handleEvent} value={company.phone} name=\"phone\" placeholder=\"Teléfono\" />\n\t\t\t\t\t\t\t\t\t</aside>\n\n\t\t\t\t\t\t\t\t\t<aside>\n\t\t\t\t\t\t\t\t\t\t{/* <ButtonComponent type=\"primary\" label=\"Actualizar\" /> */}\n\t\t\t\t\t\t\t\t\t\t<BtnPrimary onClick={handleUpdate}>Actualizar</BtnPrimary>\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<p>Datos personales</p>\n\t\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-3\">\n\t\t\t\t\t\t\t\t\t\t<Txtfield onChange={handleEventPostulant} value={postulant.name} name=\"name\" placeholder=\"Nombres\" />\n\t\t\t\t\t\t\t\t\t\t<Txtfield onChange={handleEventPostulant} value={postulant.lastName} name=\"lastName\" placeholder=\"Apellidos\" />\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-2 mb-5\">\n\t\t\t\t\t\t\t\t\t\t<Txtfield onChange={handleEventPostulant} value={postulant.email} name=\"email\" placeholder=\"Correo electrónico\" />\n\t\t\t\t\t\t\t\t\t\t<Txtfield onChange={handleEventPostulant} value={postulant.phone} name=\"phone\" placeholder=\"Teléfono\" />\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t\t<p>Datos de Pago</p>\n\t\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-3\">\n\t\t\t\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>Tipo de comprobante</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>Recibo por Honorarios</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>Factura</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>Recibo</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t<Txtfield placeholder=\"Nro de comprobante\" />\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t\t<aside className=\"FormGroup mt-2 mb-5\">\n\t\t\t\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>Banco de destino</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>Banco de Crédito del Perú</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>BBVA</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t<Txtfield placeholder=\"Nro de cuenta\" />\n\t\t\t\t\t\t\t\t\t</aside>\n\n\t\t\t\t\t\t\t\t\t<aside>\n\t\t\t\t\t\t\t\t\t\t{/* <ButtonComponent  type=\"primary\" label=\"Actualizar\" /> */}\n\t\t\t\t\t\t\t\t\t\t<BtnPrimary onClick={handleUpdate}>Actualizar</BtnPrimary>\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</TabPanel>\n\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t{/* <section className=\"apply\">\n\t\t\t\t\t\t\t<img src={ilusEmpty} alt=\"empty\" />\n\t\t\t\t\t\t\t<p>No se encontraron postulaciones</p>\n\n\t\t\t\t\t\t</section> */}\n\n\t\t\t\t\t\t{user?.rol === COMPANY ? <PostCompany /> : <MyApply />}\n\t\t\t\t\t</TabPanel>\n\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t<section className=\"proyects\">\n\t\t\t\t\t\t\t<img src={ilusEmpty} alt=\"empty\" />\n\t\t\t\t\t\t\t<p>Aún no ingresaste a algún proyecto</p>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</TabPanel>\n\t\t\t\t</Tabs>\n\t\t\t</section>\n\t\t\t<Footer />\n\t\t</React.Fragment>\n\t);\n}\n","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/login.tsx",["255","256","257","258"],[],"import * as React from 'react';\n\nimport Header from '../components/shared/header';\nimport { SESSION, USER_OR_PASSWORD_NOT_EXISTING } from './../helpers/constants';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Txtfield, BtnPrimary } from './../components/shared/styled';\n\nimport './../sass/pages/_login.scss';\n\nimport { useAuth } from '../hooks/useAuth';\n\nexport default function Login() {\n\tconst navigate = useNavigate();\n\tconst [user, setUser] = React.useState({ email: '', password: '' });\n\n\tconst { startLogin } = useAuth();\n\n\tconst handleRedirect = async () => await startLogin(user);\n\n\tconst handleEvent = (e: any) => {\n\t\tsetUser({\n\t\t\t...user,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Header />\n\t\t\t<section className=\"LoginPage pt-2\">\n\t\t\t\t<h2>Ingresar a la plataforma</h2>\n\t\t\t\t<aside className=\"FormGroup mt-5\">\n\t\t\t\t\t<Txtfield onChange={handleEvent} name=\"email\" className=\"mb-3\" placeholder=\"Usuario\" />\n\t\t\t\t\t<Txtfield onChange={handleEvent} name=\"password\" className=\"mb-2\" type={'password'} placeholder=\"Contraseña\" />\n\t\t\t\t</aside>\n\t\t\t\t<aside className=\"FormGroup\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t<a href=\"/#\">Olvide mi clave</a>{' '}\n\t\t\t\t\t</p>\n\t\t\t\t</aside>\n\t\t\t\t<aside className=\"FormAction mt-5\">\n\t\t\t\t\t<BtnPrimary onClick={handleRedirect}>Login</BtnPrimary>\n\t\t\t\t\t<p className=\"mt-2\">\n\t\t\t\t\t\t<a href=\"/#\">No tienes una cuenta?</a>\n\t\t\t\t\t</p>\n\t\t\t\t</aside>\n\t\t\t</section>\n\t\t</React.Fragment>\n\t);\n}\n","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/searchJob.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/pages/applyJob.tsx",["259"],[],"import * as React from \"react\";\nimport Header from \"../components/shared/header\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport CheckButton from \"../components/shared/atom/checkButton\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport {\n  Txtfield,\n  DropdownMenu,\n  DropdownItem,\n  BtnPrimary,\n} from \"./../components/shared/styled\";\nimport \"react-tabs/style/react-tabs.css\";\nimport \"./../sass/pages/_applyJob.scss\";\nimport Footer from \"../components/shared/footer\";\nimport {usePostForm, usePostJob} from \"../hooks/usePostJob\";\nimport {useTab} from \"../hooks/useTab\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {PostJob} from \"../types/post_job\";\nimport {get} from \"lodash\";\nimport {postulateJob} from \"../util/job.service\";\nimport {Backdrop, CircularProgress} from \"@material-ui/core\";\n\nexport default function ApplyJob() {\n  const { form, handleForm, reset } = usePostForm();\n  const navigate = useNavigate();\n  const { selectedTab, handleNextTab, setSelectedTab } = useTab();\n  const {id} = useParams();\n  const {postJobSate: {loading, postJob}} = usePostJob(id);\n  const _postJob = postJob!.reduce((k: any, o: any) => (k[o] = k, o), {}) as PostJob;\n\n  form.idPostJob = id;\n\n  const handleCheck = (event: any) => {\n    if (event.target.checked) form.skillsIds!.push(event.target.value);\n  }\n\n  const submit = async (event: any) => {\n    event.preventDefault();\n    await postulateJob(form);\n    toast.success(\"Te has postulado correctamente, gracias!\")\n    reset();\n    setTimeout(() => {\n      navigate(\"/\");\n    }, 2000);\n  }\n\n  return (\n    <React.Fragment>\n      <Backdrop\n          open={loading!}\n          style={{\n            background: \"white\",\n            zIndex: 99,\n          }}\n      >\n        <CircularProgress color=\"inherit\"/>\n      </Backdrop>\n      <Header />\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <form onSubmit={submit}>\n        <section className=\"applyJob\">\n          <aside className=\"coverHeader mb-5\">\n            <h1 className=\"mb-2\">{get(_postJob, \"title\", \"\")}</h1>\n            <p><i>Empresa Famel SAC</i></p>\n          </aside>\n          <aside className=\"contain\">\n            <Tabs selectedIndex={selectedTab} onSelect={(index) => setSelectedTab(index)}>\n              <TabList className={\"mb-5\"}>\n                <Tab tabIndex={\"0\"}>Datos generales</Tab>\n                <Tab tabIndex={\"1\"}>Skills</Tab>\n                <Tab tabIndex={\"2\"}>Experiencia</Tab>\n              </TabList>\n              <TabPanel tabIndex={0}>\n                <section className=\"formApply pt-5\">\n                  <article className=\"mb-5\">\n                    <p className=\"mb-3\">Comprobante de pago a emitir</p>\n                    <aside className=\"FormGroup\">\n                      <DropdownMenu onChange={handleForm} name=\"documentType\" value={form.documentType}>\n                        <DropdownItem>Elige el tipo de documento</DropdownItem>\n                        <DropdownItem value=\"1\">RUC</DropdownItem>\n                        <DropdownItem value=\"2\">DNI</DropdownItem>\n                      </DropdownMenu>\n                      <Txtfield className=\"ml-5\" placeholder=\"Nro de documento\" name=\"documentNumber\"\n                                onChange={handleForm} value={form.documentNumber}/>\n                    </aside>\n                  </article>\n                  <article>\n                    <p className=\"mb-3\">Su presupuesto estimado</p>\n                    <aside className=\"FormGroup\">\n                      <DropdownMenu onChange={handleForm} name=\"typeAmount\" value={form.typeAmount}>\n                        <DropdownItem>Eliga tipo de moneda</DropdownItem>\n                        <DropdownItem value=\"1\">Soles</DropdownItem>\n                        <DropdownItem value=\"2\">Dólares</DropdownItem>\n                      </DropdownMenu>\n                      <Txtfield className=\"ml-5\" placeholder=\"Total\" onChange={handleForm} name=\"amountEstimated\" value={form.amountEstimated} />\n                    </aside>\n                    <p className=\"mt-2\">\n                      <i>\n                        * Recuerde que el presupuesto estimado por el cliente es\n                        de : 2000 soles\n                      </i>\n                    </p>\n                  </article>\n                  <article className=\"footerSection\">\n                    <BtnPrimary type=\"button\" onClick={handleNextTab}> Siguiente </BtnPrimary>\n                  </article>\n                </section>\n              </TabPanel>\n              <TabPanel tabIndex={1}>\n                <section className=\"formApply pt-5\">\n                  <p>Elige las skills que mejor manejes</p>\n                  <article className=\"gridBox mt-4\">\n                    {\n                      get(_postJob, \"ids_Skills_post_Job\", []).map(value => (\n                          <CheckButton value={value} onChange={handleCheck} withbg=\"yes\" label={value} key={value}/>\n                      ))\n                    }\n                  </article>\n                  <article className=\"footerSection\">\n                    <BtnPrimary type=\"button\" onClick={handleNextTab}> Siguiente </BtnPrimary>\n                  </article>\n                </section>\n              </TabPanel>\n              <TabPanel tabIndex={2}>\n                <section className=\"formApply pt-5\">\n                  <article className=\"mb-5\">\n                    <p className=\"mb-3 text-center\">\n                      Enlace digital de experiencia laboral (Certijoven, Linkedin,\n                      Web, etc)\n                    </p>\n                    <aside className=\"FormGroup\">\n                      <DropdownMenu onChange={handleForm} name=\"typeBio\" value={form.typeBio}>\n                        <DropdownItem>Seleccione tipo de enlace </DropdownItem>\n                        <DropdownItem value=\"1\">Linkedin</DropdownItem>\n                        <DropdownItem value=\"2\">Web</DropdownItem>\n                      </DropdownMenu>\n                      <Txtfield className=\"ml-5\" placeholder=\"Ingrese enlace\" onChange={handleForm} name=\"linkBio\" value={form.linkBio} />\n                    </aside>\n                  </article>\n                  <article className=\"mb-5\">\n                    <p className=\"text-center mb-3\">\n                      ó , coloca tu experiencia respecto al puesto que buscamos\n                    </p>\n                    <aside className=\"FormGroup\">\n                      <Txtfield className=\"mr-5\" placeholder=\"Empresa\" />\n                      <Txtfield className=\"\" placeholder=\"Tiempo de trabajo\" />\n                    </aside>\n                    <aside className=\"FormGroup-full mt-4\">\n                      <Txtfield placeholder=\"Empresa\" />\n                    </aside>\n                  </article>\n\n                  <article className=\"footerSection\">\n                    <BtnPrimary type=\"submit\"> Aplicar </BtnPrimary>\n                  </article>\n                </section>\n              </TabPanel>\n            </Tabs>\n          </aside>\n        </section>\n      </form>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/detailPost.tsx",["260"],[],"import * as React from \"react\";\nimport \"./../sass/pages/_detailPost.scss\";\n\nimport Header from \"../components/shared/header\";\nimport TagComponent from \"../components/shared/atom/tag\";\nimport CardPost from \"../components/shared/cardPost\";\n\nimport Logo1 from \"./../assets/logos/1.svg\";\n\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {BtnPrimary} from \"../components/shared/styled\";\nimport Footer from \"../components/shared/footer\";\nimport {usePostJob} from \"../hooks/usePostJob\";\nimport {Backdrop, CircularProgress} from \"@material-ui/core\";\nimport {get, split} from \"lodash\";\nimport {PostJob} from \"../types/post_job\";\n\nexport default function ListPost() {\n    const navigate = useNavigate();\n    const {id} = useParams();\n    const {postJobSate: {loading, postJob}} = usePostJob(id);\n    const _postJob = postJob!.reduce((k: any, o: any) => (k[o] = k, o), {}) as PostJob;\n\n    const handleRedirect = () => {\n        navigate(\"/apply/\"+id);\n    };\n\n    return (\n        <React.Fragment>\n            <Header/>\n            <Backdrop\n                open={loading!}\n                style={{\n                    background: \"white\",\n                    zIndex: 99,\n                }}\n            >\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n            {\n                !loading && <section className=\"DetailPostComponent\">\n                    <aside className=\"coverHeader mb-5\">\n                        <h1 className=\"mb-2\">{get(_postJob, \"title\", \"\")}</h1>\n                        <p>\n                            <i>Empresa Famel SAC</i>\n                        </p>\n                    </aside>\n                    <aside className=\"skillTags\">\n                        {\n                            get(_postJob, \"ids_Skills_post_Job\", []).map(value => (\n                                <TagComponent type=\"highlight\" key={Math.random()} level=\"secondary\" label={value}/>\n                            ))\n                        }\n                    </aside>\n                    <hr/>\n                    <aside className=\"cardApply mt-5\">\n                        <article className=\"imgBrand logoBrand\">\n                            <img src={Logo1} alt=\"\"/>\n                        </article>\n                        <article className=\"infoApply\">\n                            <h4>12 personas aplicaron</h4>\n                            <p className=\"mt-2\">10 de Diciembre 2022</p>\n                        </article>\n                        <article className=\"actionApply\">\n                            <BtnPrimary onClick={handleRedirect}> Aplicar </BtnPrimary>\n                            <p className=\"mt-2\">Requerimiento activo</p>\n                        </article>\n                    </aside>\n                    <aside className=\"detailsApply mt-5 mb-5\">\n                        <article className=\"leftBox\">\n                            <div className=\"mb-5\">\n                                <h4 className=\"mb-3\">Descripción</h4>\n                                <p>\n                                    {\n                                        get(_postJob, \"description_post\", \"\")\n                                    }\n                                </p>\n                            </div>\n                            <hr/>\n                            <div className=\"mt-5\">\n                                <h4 className=\"mb-3\">Funciones</h4>\n                                {\n                                    split(get(_postJob, \"funtions_post\", \"\"), \",\").map(value => (\n                                        <p key={Math.random()}>\n                                            * {value}\n                                        </p>\n                                    ))\n                                }\n                            </div>\n                        </article>\n                        <article className=\"rightBox\">\n                            <h4 className=\"mb-3\">Precisiones</h4>\n\n                            <ul>\n                                <li>Duración: 1 mes</li>\n                                <li>Presupuesto estimado: S/ {get(_postJob, \"salary_range\", \"\")}</li>\n                                <li>Tipo: Híbrido</li>\n                            </ul>\n                        </article>\n                    </aside>\n\n                    <aside className=\"postRelated mt-5\">\n                        <h2 className=\"mb-5\">Publicaciones Similares</h2>\n                        <CardPost/>\n                    </aside>\n                </section>\n            }\n            <Footer/>\n        </React.Fragment>\n    );\n}\n","/Users/harold/projects/Meant/chambeaya_frontend/src/pages/bussiness.tsx",["261"],[],"import * as React from 'react';\nimport CheckButton from '../components/shared/atom/checkButton';\nimport Footer from '../components/shared/footer';\nimport Header from '../components/shared/header';\nimport { BtnPrimary, Txtfield } from '../components/shared/styled';\nimport './../sass/pages/_corporativo.scss';\n\nimport CoverCorporativo from './../assets/coverCorporativo.svg';\n\nimport { registerSalesCompany } from '../util/auth.service';\nimport { useNavigate } from 'react-router-dom';\nimport { CREATE_USER, USER_EXISTING } from '../helpers/constants';\nimport { COMPANY } from '../helpers/constants';\n\nexport default function BussinessSignUp() {\n\tconst navigate = useNavigate();\n\n\tconst [companySales, setCompanySales] = React.useState({\n\t\tbusinessName: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tphone: '',\n\t\tdescription: '',\n\t\truc: '',\n\t\trolUser: COMPANY,\n\t});\n\n\tconst handleRegister = async () => {\n\t\tconst dataSend = {\n\t\t\temail: companySales.email,\n\t\t\tpassword: companySales.password,\n\t\t\trol: companySales.rolUser,\n\t\t\tdataUser: {\n\t\t\t\temail: companySales.email,\n\t\t\t\trol: companySales.rolUser,\n\t\t\t\truc: companySales.ruc,\n\t\t\t\tbusinessName: companySales.businessName,\n\t\t\t\tyoutube: '',\n\t\t\t\tweb: '',\n\t\t\t\tphone: companySales.phone,\n\t\t\t\tfacebook: '',\n\t\t\t\tdescription: '',\n\t\t\t\tlinkedin: '',\n\t\t\t},\n\t\t};\n\t\tconst response = await registerSalesCompany(dataSend);\n\t\tswitch (response.data.message) {\n\t\t\tcase CREATE_USER:\n\t\t\t\talert('se registro exitosamente la empresa');\n\t\t\t\tnavigate('/account-sales', { replace: true });\n\t\t\t\treturn;\n\t\t\tcase USER_EXISTING:\n\t\t\t\talert('el usuario ya existe');\n\t\t\t\treturn;\n\t\t\tdefault:\n\t\t\t\talert('Error corregir esto :c');\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handleEvent = (e: any) => {\n\t\tsetCompanySales({\n\t\t\t...companySales,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Header />\n\t\t\t<section className=\"corporativoPage\">\n\t\t\t\t<aside className=\"coverSection\">\n\t\t\t\t\t<img src={CoverCorporativo} alt=\"\" />\n\t\t\t\t\t<span>\n\t\t\t\t\t\tÚnete a las compañias que buscan <strong>resultados.</strong>\n\t\t\t\t\t</span>\n\t\t\t\t</aside>\n\t\t\t\t<aside className=\"formRegister\">\n\t\t\t\t\t<h2>Registro de nueva cartera</h2>\n\t\t\t\t\t<aside className=\"FormGroup mt-5\">\n\t\t\t\t\t\t<Txtfield className=\"mb-3\" onChange={handleEvent} name=\"ruc\" placeholder=\"Ruc\" />\n\t\t\t\t\t\t<Txtfield className=\"mb-2\" onChange={handleEvent} name=\"businessName\" placeholder=\"Razón Social\" />\n\t\t\t\t\t</aside>\n\t\t\t\t\t<aside className=\"FormGroup\">\n\t\t\t\t\t\t<Txtfield type={'email'} onChange={handleEvent} name=\"email\" value={companySales.email} className=\"mb-3\" placeholder=\"Correo electrónico\" autoComplete=\"off\" />\n\t\t\t\t\t\t<Txtfield type={'tel'} onChange={handleEvent} name=\"phone\" className=\"mb-2\" placeholder=\"Teléfono / Celular\" />\n\t\t\t\t\t</aside>\n\t\t\t\t\t<aside className=\"FormGroup mt-2\">\n\t\t\t\t\t\t<Txtfield className=\"mb-3\" onChange={handleEvent} name=\"password\" value={companySales.password} type={'password'} placeholder=\"Clave\" autoComplete=\"off\" />\n\t\t\t\t\t\t<Txtfield className=\"mb-2\" onChange={handleEvent} name=\"confirmPassword\" type={'password'} placeholder=\"Repetir clave\" />\n\t\t\t\t\t</aside>\n\n\t\t\t\t\t<aside className=\"FormAction mt-5\">\n\t\t\t\t\t\t<BtnPrimary onClick={handleRegister}>CREAR CARTERA</BtnPrimary>\n\t\t\t\t\t</aside>\n\t\t\t\t</aside>\n\t\t\t</section>\n\t\t\t<Footer />\n\t\t</React.Fragment>\n\t);\n}\n","/Users/harold/projects/Meant/chambeaya_frontend/src/helpers/constants.ts",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/helpers/localStorage.ts",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/hooks/useTab.ts",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/util/job.service.ts",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/util/auth.service.ts",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/hooks/usePostJob.ts",["262"],[],"import React from \"react\";\nimport { PostJob } from \"../types/post_job\";\nimport { getAllJobs, getJob } from \"../util/job.service\";\nimport { PostJobPostulantRequest } from \"../types/post_job_postulant_request\";\n\ntype PostState = {\n  loading?: boolean;\n  postJobs?: PostJob[];\n  postJob?: PostJob[];\n}\n\nexport const usePostJob = (id?: string) => {\n  const [postJobsState, setPostJobs] = React.useState<PostState>({\n    loading: true,\n    postJobs: [],\n  });\n  const [postJobSate, setPostJob] = React.useState<PostState>({\n    loading: true,\n    postJob: []\n  });\n\n  const getAllJobsData = async () => {\n    const {\n      data: { listPostJob },\n    } = await getAllJobs();\n    setPostJobs({\n      loading: false,\n      postJobs: listPostJob\n    });\n  };\n\n  const getJobData = async (id: string) => {\n    const { listPostJob } = await getJob(id);\n    setPostJob({\n      loading: false,\n      postJob: listPostJob\n    })\n  }\n\n  React.useEffect(() => {\n    getAllJobsData().then(r => r);\n    getJobData(id!).then(r => r);\n  }, []);\n\n\n  return { postJobsState, postJobSate }\n};\n\n\nexport const usePostForm = () => {\n  const [form, setForm] = React.useState<PostJobPostulantRequest>(    {\n    idPostJob: \"\",\n    documentType: \"\",\n    documentNumber: \"\",\n    typeAmount: \"\",\n    amountEstimated: \"\",\n    skillsIds: [],\n    typeBio: \"\",\n    linkBio: \"\"\n  });\n\n  const handleForm = (event: any) => {\n    setForm({\n      ...form,\n      [event.target.name] : event.target.value,\n    })\n  }\n\n  const reset = () => {\n    setForm({\n      idPostJob: \"\",\n      documentType: \"\",\n      documentNumber: \"\",\n      typeAmount: \"\",\n      amountEstimated: \"\",\n      skillsIds: [],\n      typeBio: \"\",\n      linkBio: \"\"\n    })\n  }\n\n  return { form, handleForm, reset }\n}","/Users/harold/projects/Meant/chambeaya_frontend/src/util/publication.service.ts",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/hooks/useAuth.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/components/ListCompany.tsx",["263"],[],"import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useSales } from '../hooks/useSales';\nimport { RootState } from '../redux/store/store';\nimport ButtonComponent from './shared/atom/button';\nimport TagComponent from './shared/atom/tag';\nimport { BtnPrimary } from './shared/styled';\n\nexport default function ListCompany() {\n\tconst navigate = useNavigate();\n\tconst handleRedirect = () => {\n\t\tnavigate('/bussiness');\n\t};\n\n\tconst { startGetCompanies } = useSales();\n\tconst { companies } = useSelector((state: RootState) => state.sales);\n\n\tReact.useEffect(() => {\n\t\tconsole.log('Listar');\n\t\tlistCompaniesSales();\n\t}, []);\n\n\tconst listCompaniesSales = async () => await startGetCompanies();\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<section className=\"sectionAccount\">\n\t\t\t\t<aside className=\"mb-5\">\n\t\t\t\t\t<article className=\"headSection dfr jc-sb\">\n\t\t\t\t\t\t<h2>Cartera de negocios</h2>\n\t\t\t\t\t\t<BtnPrimary onClick={handleRedirect}>CREAR NUEVA CARTERA</BtnPrimary>\n\t\t\t\t\t</article>\n\t\t\t\t\t<p>Tienes # compañias en tu cartera</p>\n\t\t\t\t</aside>\n\n\t\t\t\t<div>\n\t\t\t\t\t{companies.map((company) => (\n\t\t\t\t\t\t<aside key={company.id}>\n\t\t\t\t\t\t\t<article className=\"rowPost row\">\n\t\t\t\t\t\t\t\t<aside className=\"title\">\n\t\t\t\t\t\t\t\t\t<p className=\"mb-2\">{company.dataUser.businessName}</p>\n\t\t\t\t\t\t\t\t\t<TagComponent type=\"state\" level=\"success\" label=\"Activo\" />\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t<aside className=\"title\">\n\t\t\t\t\t\t\t\t\t<p>{company.dataUser.ruc}</p>\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t<aside className=\"actions\">\n\t\t\t\t\t\t\t\t\t<ButtonComponent type=\"secondary\" label=\"Ver detalles\" />\n\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t</aside>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</React.Fragment>\n\t);\n}\n","/Users/harold/projects/Meant/chambeaya_frontend/src/components/hero.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/components/listPost.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/components/MyApply.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/components/PostCompany.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/styled.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/footer.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/header.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/cardPost.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/atom/checkButton.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/atom/tag.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/atom/button.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/util/user.service.ts",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/enviroment/enviroment.ts",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/hooks/useSales.tsx",["264","265"],[],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { LIST_SUCCESS } from '../helpers/constants';\nimport { loadCompanies } from '../redux/slices/salesSlice';\nimport { getSalesCompanies } from '../util/sales.service';\n\nexport const useSales = () => {\n\tconst navigate = useNavigate();\n\tconst dispatch = useDispatch();\n\n\tconst startGetCompanies = async () => {\n\t\ttry {\n\t\t\tconst { data } = await getSalesCompanies();\n\t\t\tif (data.message === LIST_SUCCESS) {\n\t\t\t\tdispatch(loadCompanies({ companies: [...data.data.dataUsers] }));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\talert('ERROR LISTAR LAS EMPRESAS');\n\t\t}\n\t};\n\n\treturn {\n\t\tstartGetCompanies,\n\t};\n};\n","/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/NavbarComponent.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/components/shared/atom/card.tsx",[],[],"/Users/harold/projects/Meant/chambeaya_frontend/src/util/sales.service.ts",[],[],{"ruleId":"266","severity":1,"message":"267","line":2,"column":42,"nodeType":"268","messageId":"269","endLine":2,"endColumn":48},{"ruleId":"266","severity":1,"message":"270","line":2,"column":56,"nodeType":"268","messageId":"269","endLine":2,"endColumn":64},{"ruleId":"266","severity":1,"message":"271","line":17,"column":10,"nodeType":"268","messageId":"269","endLine":17,"endColumn":16},{"ruleId":"266","severity":1,"message":"272","line":2,"column":10,"nodeType":"268","messageId":"269","endLine":2,"endColumn":22},{"ruleId":"266","severity":1,"message":"273","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":16},{"ruleId":"266","severity":1,"message":"274","line":9,"column":10,"nodeType":"268","messageId":"269","endLine":9,"endColumn":14},{"ruleId":"266","severity":1,"message":"275","line":17,"column":10,"nodeType":"268","messageId":"269","endLine":17,"endColumn":16},{"ruleId":"276","severity":1,"message":"277","line":112,"column":21,"nodeType":"278","messageId":"279","endLine":112,"endColumn":23},{"ruleId":"276","severity":1,"message":"277","line":112,"column":42,"nodeType":"278","messageId":"279","endLine":112,"endColumn":44},{"ruleId":"276","severity":1,"message":"277","line":113,"column":57,"nodeType":"278","messageId":"279","endLine":113,"endColumn":59},{"ruleId":"266","severity":1,"message":"280","line":163,"column":8,"nodeType":"268","messageId":"269","endLine":163,"endColumn":17},{"ruleId":"266","severity":1,"message":"281","line":206,"column":4,"nodeType":"268","messageId":"269","endLine":206,"endColumn":10},{"ruleId":"282","severity":1,"message":"283","line":208,"column":5,"nodeType":"284","endLine":208,"endColumn":38,"suggestions":"285"},{"ruleId":"266","severity":1,"message":"286","line":1,"column":27,"nodeType":"268","messageId":"269","endLine":1,"endColumn":36},{"ruleId":"266","severity":1,"message":"287","line":5,"column":20,"nodeType":"268","messageId":"269","endLine":5,"endColumn":27},{"ruleId":"266","severity":1,"message":"288","line":5,"column":29,"nodeType":"268","messageId":"269","endLine":5,"endColumn":41},{"ruleId":"266","severity":1,"message":"289","line":5,"column":43,"nodeType":"268","messageId":"269","endLine":5,"endColumn":55},{"ruleId":"266","severity":1,"message":"290","line":9,"column":10,"nodeType":"268","messageId":"269","endLine":9,"endColumn":17},{"ruleId":"266","severity":1,"message":"291","line":9,"column":19,"nodeType":"268","messageId":"269","endLine":9,"endColumn":28},{"ruleId":"266","severity":1,"message":"292","line":10,"column":20,"nodeType":"268","messageId":"269","endLine":10,"endColumn":31},{"ruleId":"266","severity":1,"message":"293","line":15,"column":8,"nodeType":"268","messageId":"269","endLine":15,"endColumn":19},{"ruleId":"266","severity":1,"message":"294","line":16,"column":8,"nodeType":"268","messageId":"269","endLine":16,"endColumn":15},{"ruleId":"295","severity":1,"message":"296","line":60,"column":8,"nodeType":"297","endLine":60,"endColumn":34},{"ruleId":"266","severity":1,"message":"286","line":1,"column":27,"nodeType":"268","messageId":"269","endLine":1,"endColumn":36},{"ruleId":"295","severity":1,"message":"296","line":78,"column":8,"nodeType":"297","endLine":78,"endColumn":34},{"ruleId":"266","severity":1,"message":"298","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":17},{"ruleId":"266","severity":1,"message":"299","line":4,"column":19,"nodeType":"268","messageId":"269","endLine":4,"endColumn":48},{"ruleId":"266","severity":1,"message":"300","line":5,"column":23,"nodeType":"268","messageId":"269","endLine":5,"endColumn":34},{"ruleId":"266","severity":1,"message":"301","line":13,"column":8,"nodeType":"268","messageId":"269","endLine":13,"endColumn":16},{"ruleId":"302","severity":1,"message":"303","line":29,"column":65,"nodeType":"304","messageId":"305","endLine":29,"endColumn":66},{"ruleId":"302","severity":1,"message":"303","line":22,"column":67,"nodeType":"304","messageId":"305","endLine":22,"endColumn":68},{"ruleId":"266","severity":1,"message":"306","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"282","severity":1,"message":"307","line":43,"column":6,"nodeType":"284","endLine":43,"endColumn":8,"suggestions":"308"},{"ruleId":"282","severity":1,"message":"309","line":22,"column":5,"nodeType":"284","endLine":22,"endColumn":7,"suggestions":"310"},{"ruleId":"266","severity":1,"message":"311","line":1,"column":8,"nodeType":"268","messageId":"269","endLine":1,"endColumn":13},{"ruleId":"266","severity":1,"message":"301","line":9,"column":8,"nodeType":"268","messageId":"269","endLine":9,"endColumn":16},"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Navigate' is defined but never used.","'status' is assigned a value but never used.","'UserGenerico' is defined but never used.","'boxEmpty' is defined but never used.","'Hint' is defined but never used.","'addJob' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'getSkills' is assigned a value but never used.","'active' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'skillPayload'. Either include it or remove the dependency array.","ArrayExpression",["312"],"'useEffect' is defined but never used.","'TxtArea' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'COMPANY' is defined but never used.","'POSTULANT' is defined but never used.","'useNavigate' is defined but never used.","'PostCompany' is defined but never used.","'MyApply' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'SESSION' is defined but never used.","'USER_OR_PASSWORD_NOT_EXISTING' is defined but never used.","'useLocation' is defined but never used.","'navigate' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'CheckButton' is defined but never used.","React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["313"],"React Hook React.useEffect has a missing dependency: 'listCompaniesSales'. Either include it or remove the dependency array.",["314"],"'React' is defined but never used.",{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},"Update the dependencies array to be: [skillPayload.idPositon, loading, skillPayload]",{"range":"321","text":"322"},"Update the dependencies array to be: [id]",{"range":"323","text":"324"},"Update the dependencies array to be: [listCompaniesSales]",{"range":"325","text":"326"},[6582,6615],"[skillPayload.idPositon, loading, skillPayload]",[1020,1022],"[id]",[693,695],"[listCompaniesSales]"]