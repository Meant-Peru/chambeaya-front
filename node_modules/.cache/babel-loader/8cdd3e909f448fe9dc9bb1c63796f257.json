{"ast":null,"code":"import _objectSpread from\"C:/Users/user/Documents/backut/chambeaya-front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createSlice}from'@reduxjs/toolkit';var initialState={errorMessage:'',loading:false,companies:[]};var salesSlice=createSlice({name:'salesSlice',initialState:initialState,reducers:{loadCompanies:function loadCompanies(state,_ref){var payload=_ref.payload;return _objectSpread(_objectSpread({},state),{},{companies:payload.companies,loading:false,errorMessage:''});},changeLoading:function changeLoading(state){return _objectSpread(_objectSpread({},state),{},{loadingLogin:true});}}});var _salesSlice$actions=salesSlice.actions,loadCompanies=_salesSlice$actions.loadCompanies,changeLoading=_salesSlice$actions.changeLoading;export{loadCompanies,changeLoading};export default salesSlice.reducer;","map":{"version":3,"sources":["C:/Users/user/Documents/backut/chambeaya-front/src/redux/slices/salesSlice.ts"],"names":["createSlice","initialState","errorMessage","loading","companies","salesSlice","name","reducers","loadCompanies","state","payload","changeLoading","loadingLogin","actions","reducer"],"mappings":"mIAAA,OAASA,WAAT,KAA2C,kBAA3C,CAUA,GAAMC,CAAAA,YAAwB,CAAG,CAChCC,YAAY,CAAE,EADkB,CAEhCC,OAAO,CAAE,KAFuB,CAGhCC,SAAS,CAAE,EAHqB,CAAjC,CAMA,GAAMC,CAAAA,UAAU,CAAGL,WAAW,CAAC,CAC9BM,IAAI,CAAE,YADwB,CAE9BL,YAAY,CAAZA,YAF8B,CAG9BM,QAAQ,CAAE,CACTC,aAAa,CAAE,uBAACC,KAAD,MAA4C,IAAlCC,CAAAA,OAAkC,MAAlCA,OAAkC,CAC1D,sCACID,KADJ,MAECL,SAAS,CAAEM,OAAO,CAACN,SAFpB,CAGCD,OAAO,CAAE,KAHV,CAICD,YAAY,CAAE,EAJf,GAMA,CARQ,CASTS,aAAa,CAAE,uBAACF,KAAD,CAAW,CACzB,sCACIA,KADJ,MAECG,YAAY,CAAE,IAFf,GAIA,CAdQ,CAHoB,CAAD,CAA9B,CAqBO,wBAAyCP,UAAU,CAACQ,OAApD,CAAQL,aAAR,qBAAQA,aAAR,CAAuBG,aAAvB,qBAAuBA,aAAvB,C,oCAEP,cAAeN,CAAAA,UAAU,CAACS,OAA1B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { UserGenerico } from '../../interfaces/User';\nimport { CompanySales } from '../../interfaces/CompanySales';\n\ninterface SalesState {\n\tcompanies: CompanySales[];\n\tloading: boolean;\n\terrorMessage: string;\n}\n\nconst initialState: SalesState = {\n\terrorMessage: '',\n\tloading: false,\n\tcompanies: [],\n};\n\nconst salesSlice = createSlice({\n\tname: 'salesSlice',\n\tinitialState,\n\treducers: {\n\t\tloadCompanies: (state, { payload }: PayloadAction<any>) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcompanies: payload.companies,\n\t\t\t\tloading: false,\n\t\t\t\terrorMessage: '',\n\t\t\t};\n\t\t},\n\t\tchangeLoading: (state) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloadingLogin: true,\n\t\t\t};\n\t\t},\n\t},\n});\n\nexport const { loadCompanies, changeLoading } = salesSlice.actions;\n\nexport default salesSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}