{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { getAllJobs, getJob } from \"../util/job.service\";\nexport const usePostJob = id => {\n  _s();\n\n  const [postJobsState, setPostJobs] = React.useState({\n    loading: true,\n    postJobs: []\n  });\n  const [postJobSate, setPostJob] = React.useState({\n    loading: true,\n    postJob: []\n  });\n\n  const getAllJobsData = async () => {\n    const {\n      data: {\n        listPostJob\n      }\n    } = await getAllJobs();\n    setPostJobs({\n      loading: false,\n      postJobs: listPostJob\n    });\n  };\n\n  const getJobData = async id => {\n    const {\n      listPostJob\n    } = await getJob(id);\n    setPostJob({\n      loading: false,\n      postJob: listPostJob\n    });\n  };\n\n  React.useEffect(() => {\n    getAllJobsData().then(r => r);\n    getJobData(id).then(r => r);\n  }, []);\n  return {\n    postJobsState,\n    postJobSate\n  };\n};\n\n_s(usePostJob, \"whM9fgmSkWmyIroB7QZqTcDB6tM=\");\n\nexport const usePostForm = () => {\n  _s2();\n\n  const [form, setForm] = React.useState({\n    idPostJob: \"\",\n    documentType: \"\",\n    documentNumber: \"\",\n    typeAmount: \"\",\n    amountEstimated: \"\",\n    skillsIds: [],\n    typeBio: \"\",\n    linkBio: \"\"\n  });\n\n  const handleForm = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const reset = () => {\n    setForm({\n      idPostJob: \"\",\n      documentType: \"\",\n      documentNumber: \"\",\n      typeAmount: \"\",\n      amountEstimated: \"\",\n      skillsIds: [],\n      typeBio: \"\",\n      linkBio: \"\"\n    });\n  };\n\n  return {\n    form,\n    handleForm,\n    reset\n  };\n};\n\n_s2(usePostForm, \"/pAjp6rYtJPV4+2DtLqHuFGTsjs=\");","map":{"version":3,"sources":["/Users/harold/projects/Meant/chambeaya_frontend/src/hooks/usePostJob.ts"],"names":["React","getAllJobs","getJob","usePostJob","id","postJobsState","setPostJobs","useState","loading","postJobs","postJobSate","setPostJob","postJob","getAllJobsData","data","listPostJob","getJobData","useEffect","then","r","usePostForm","form","setForm","idPostJob","documentType","documentNumber","typeAmount","amountEstimated","skillsIds","typeBio","linkBio","handleForm","event","target","name","value","reset"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,qBAAnC;AASA,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAiB;AAAA;;AACzC,QAAM,CAACC,aAAD,EAAgBC,WAAhB,IAA+BN,KAAK,CAACO,QAAN,CAA0B;AAC7DC,IAAAA,OAAO,EAAE,IADoD;AAE7DC,IAAAA,QAAQ,EAAE;AAFmD,GAA1B,CAArC;AAIA,QAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BX,KAAK,CAACO,QAAN,CAA0B;AAC1DC,IAAAA,OAAO,EAAE,IADiD;AAE1DI,IAAAA,OAAO,EAAE;AAFiD,GAA1B,CAAlC;;AAKA,QAAMC,cAAc,GAAG,YAAY;AACjC,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AADF,QAEF,MAAMd,UAAU,EAFpB;AAGAK,IAAAA,WAAW,CAAC;AACVE,MAAAA,OAAO,EAAE,KADC;AAEVC,MAAAA,QAAQ,EAAEM;AAFA,KAAD,CAAX;AAID,GARD;;AAUA,QAAMC,UAAU,GAAG,MAAOZ,EAAP,IAAsB;AACvC,UAAM;AAAEW,MAAAA;AAAF,QAAkB,MAAMb,MAAM,CAACE,EAAD,CAApC;AACAO,IAAAA,UAAU,CAAC;AACTH,MAAAA,OAAO,EAAE,KADA;AAETI,MAAAA,OAAO,EAAEG;AAFA,KAAD,CAAV;AAID,GAND;;AAQAf,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,cAAc,GAAGK,IAAjB,CAAsBC,CAAC,IAAIA,CAA3B;AACAH,IAAAA,UAAU,CAACZ,EAAD,CAAV,CAAgBc,IAAhB,CAAqBC,CAAC,IAAIA,CAA1B;AACD,GAHD,EAGG,EAHH;AAMA,SAAO;AAAEd,IAAAA,aAAF;AAAiBK,IAAAA;AAAjB,GAAP;AACD,CAnCM;;GAAMP,U;;AAsCb,OAAO,MAAMiB,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtB,KAAK,CAACO,QAAN,CAA4C;AAClEgB,IAAAA,SAAS,EAAE,EADuD;AAElEC,IAAAA,YAAY,EAAE,EAFoD;AAGlEC,IAAAA,cAAc,EAAE,EAHkD;AAIlEC,IAAAA,UAAU,EAAE,EAJsD;AAKlEC,IAAAA,eAAe,EAAE,EALiD;AAMlEC,IAAAA,SAAS,EAAE,EANuD;AAOlEC,IAAAA,OAAO,EAAE,EAPyD;AAQlEC,IAAAA,OAAO,EAAE;AARyD,GAA5C,CAAxB;;AAWA,QAAMC,UAAU,GAAIC,KAAD,IAAgB;AACjCV,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACW,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAsBF,KAAK,CAACC,MAAN,CAAaE;AAF7B,KAAD,CAAP;AAID,GALD;;AAOA,QAAMC,KAAK,GAAG,MAAM;AAClBd,IAAAA,OAAO,CAAC;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,cAAc,EAAE,EAHV;AAINC,MAAAA,UAAU,EAAE,EAJN;AAKNC,MAAAA,eAAe,EAAE,EALX;AAMNC,MAAAA,SAAS,EAAE,EANL;AAONC,MAAAA,OAAO,EAAE,EAPH;AAQNC,MAAAA,OAAO,EAAE;AARH,KAAD,CAAP;AAUD,GAXD;;AAaA,SAAO;AAAET,IAAAA,IAAF;AAAQU,IAAAA,UAAR;AAAoBK,IAAAA;AAApB,GAAP;AACD,CAjCM;;IAAMhB,W","sourcesContent":["import React from \"react\";\nimport { PostJob } from \"../types/post_job\";\nimport { getAllJobs, getJob } from \"../util/job.service\";\nimport { PostJobPostulantRequest } from \"../types/post_job_postulant_request\";\n\ntype PostState = {\n  loading?: boolean;\n  postJobs?: PostJob[];\n  postJob?: PostJob[];\n}\n\nexport const usePostJob = (id?: string) => {\n  const [postJobsState, setPostJobs] = React.useState<PostState>({\n    loading: true,\n    postJobs: [],\n  });\n  const [postJobSate, setPostJob] = React.useState<PostState>({\n    loading: true,\n    postJob: []\n  });\n\n  const getAllJobsData = async () => {\n    const {\n      data: { listPostJob },\n    } = await getAllJobs();\n    setPostJobs({\n      loading: false,\n      postJobs: listPostJob\n    });\n  };\n\n  const getJobData = async (id: string) => {\n    const { listPostJob } = await getJob(id);\n    setPostJob({\n      loading: false,\n      postJob: listPostJob\n    })\n  }\n\n  React.useEffect(() => {\n    getAllJobsData().then(r => r);\n    getJobData(id!).then(r => r);\n  }, []);\n\n\n  return { postJobsState, postJobSate }\n};\n\n\nexport const usePostForm = () => {\n  const [form, setForm] = React.useState<PostJobPostulantRequest>(    {\n    idPostJob: \"\",\n    documentType: \"\",\n    documentNumber: \"\",\n    typeAmount: \"\",\n    amountEstimated: \"\",\n    skillsIds: [],\n    typeBio: \"\",\n    linkBio: \"\"\n  });\n\n  const handleForm = (event: any) => {\n    setForm({\n      ...form,\n      [event.target.name] : event.target.value,\n    })\n  }\n\n  const reset = () => {\n    setForm({\n      idPostJob: \"\",\n      documentType: \"\",\n      documentNumber: \"\",\n      typeAmount: \"\",\n      amountEstimated: \"\",\n      skillsIds: [],\n      typeBio: \"\",\n      linkBio: \"\"\n    })\n  }\n\n  return { form, handleForm, reset }\n}"]},"metadata":{},"sourceType":"module"}