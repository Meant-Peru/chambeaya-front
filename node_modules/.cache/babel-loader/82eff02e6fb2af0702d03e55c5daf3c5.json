{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  errorMessage: '',\n  loading: false,\n  companies: []\n};\nconst salesSlice = createSlice({\n  name: 'salesSlice',\n  initialState,\n  reducers: {\n    loadCompanies: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      return { ...state,\n        companies: payload.companies,\n        loading: false,\n        errorMessage: ''\n      };\n    },\n    changeLoading: state => {\n      return { ...state,\n        loadingLogin: true\n      };\n    }\n  }\n});\nexport const {\n  loadCompanies,\n  changeLoading\n} = salesSlice.actions;\nexport default salesSlice.reducer;","map":{"version":3,"sources":["/Users/harold/projects/Meant/chambeaya_frontend/src/redux/slices/salesSlice.ts"],"names":["createSlice","initialState","errorMessage","loading","companies","salesSlice","name","reducers","loadCompanies","state","payload","changeLoading","loadingLogin","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAUA,MAAMC,YAAwB,GAAG;AAChCC,EAAAA,YAAY,EAAE,EADkB;AAEhCC,EAAAA,OAAO,EAAE,KAFuB;AAGhCC,EAAAA,SAAS,EAAE;AAHqB,CAAjC;AAMA,MAAMC,UAAU,GAAGL,WAAW,CAAC;AAC9BM,EAAAA,IAAI,EAAE,YADwB;AAE9BL,EAAAA,YAF8B;AAG9BM,EAAAA,QAAQ,EAAE;AACTC,IAAAA,aAAa,EAAE,CAACC,KAAD,WAA4C;AAAA,UAApC;AAAEC,QAAAA;AAAF,OAAoC;AAC1D,aAAO,EACN,GAAGD,KADG;AAENL,QAAAA,SAAS,EAAEM,OAAO,CAACN,SAFb;AAGND,QAAAA,OAAO,EAAE,KAHH;AAIND,QAAAA,YAAY,EAAE;AAJR,OAAP;AAMA,KARQ;AASTS,IAAAA,aAAa,EAAGF,KAAD,IAAW;AACzB,aAAO,EACN,GAAGA,KADG;AAENG,QAAAA,YAAY,EAAE;AAFR,OAAP;AAIA;AAdQ;AAHoB,CAAD,CAA9B;AAqBA,OAAO,MAAM;AAAEJ,EAAAA,aAAF;AAAiBG,EAAAA;AAAjB,IAAmCN,UAAU,CAACQ,OAApD;AAEP,eAAeR,UAAU,CAACS,OAA1B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { UserGenerico } from '../../interfaces/User';\nimport { CompanySales } from '../../interfaces/CompanySales';\n\ninterface SalesState {\n\tcompanies: CompanySales[];\n\tloading: boolean;\n\terrorMessage: string;\n}\n\nconst initialState: SalesState = {\n\terrorMessage: '',\n\tloading: false,\n\tcompanies: [],\n};\n\nconst salesSlice = createSlice({\n\tname: 'salesSlice',\n\tinitialState,\n\treducers: {\n\t\tloadCompanies: (state, { payload }: PayloadAction<any>) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcompanies: payload.companies,\n\t\t\t\tloading: false,\n\t\t\t\terrorMessage: '',\n\t\t\t};\n\t\t},\n\t\tchangeLoading: (state) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloadingLogin: true,\n\t\t\t};\n\t\t},\n\t},\n});\n\nexport const { loadCompanies, changeLoading } = salesSlice.actions;\n\nexport default salesSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}