{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"checked\", \"className\", \"component\", \"components\", \"componentsProps\", \"defaultChecked\", \"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useSwitch from './useSwitch';\nimport classes from './switchUnstyledClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * The foundation for building custom-styled switches.\n *\n * Demos:\n *\n * - [Switch](https://mui.com/base/react-switch/)\n *\n * API:\n *\n * - [SwitchUnstyled API](https://mui.com/base/api/switch-unstyled/)\n */\n\nvar SwitchUnstyled = /*#__PURE__*/React.forwardRef(function SwitchUnstyled(props, ref) {\n  var _ref, _componentsProps$root, _components$Thumb, _componentsProps$thum, _components$Input, _componentsProps$inpu, _components$Track, _componentsProps$trac;\n\n  var checkedProp = props.checked,\n      className = props.className,\n      component = props.component,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      onFocusVisible = props.onFocusVisible,\n      readOnlyProp = props.readOnly,\n      otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var useSwitchProps = {\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    disabled: disabledProp,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    onFocusVisible: onFocusVisible,\n    readOnly: readOnlyProp\n  };\n\n  var _useSwitch = useSwitch(useSwitchProps),\n      getInputProps = _useSwitch.getInputProps,\n      checked = _useSwitch.checked,\n      disabled = _useSwitch.disabled,\n      focusVisible = _useSwitch.focusVisible,\n      readOnly = _useSwitch.readOnly;\n\n  var ownerState = _extends({}, props, {\n    checked: checked,\n    disabled: disabled,\n    focusVisible: focusVisible,\n    readOnly: readOnly\n  });\n\n  var stateClasses = clsx(checked && classes.checked, disabled && classes.disabled, focusVisible && classes.focusVisible, readOnly && classes.readOnly);\n  var Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'span';\n  var rootProps = appendOwnerState(Root, _extends({}, otherProps, componentsProps.root, {\n    className: clsx(classes.root, stateClasses, className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className)\n  }), ownerState);\n  var Thumb = (_components$Thumb = components.Thumb) != null ? _components$Thumb : 'span';\n  var thumbProps = appendOwnerState(Thumb, _extends({}, componentsProps.thumb, {\n    className: clsx(classes.thumb, (_componentsProps$thum = componentsProps.thumb) == null ? void 0 : _componentsProps$thum.className)\n  }), ownerState);\n  var Input = (_components$Input = components.Input) != null ? _components$Input : 'input';\n  var inputProps = appendOwnerState(Input, _extends({}, getInputProps(), componentsProps.input, {\n    className: clsx(classes.input, (_componentsProps$inpu = componentsProps.input) == null ? void 0 : _componentsProps$inpu.className)\n  }), ownerState);\n  var Track = components.Track === null ? function () {\n    return null;\n  } : (_components$Track = components.Track) != null ? _components$Track : 'span';\n  var trackProps = appendOwnerState(Track, _extends({}, componentsProps.track, {\n    className: clsx(classes.track, (_componentsProps$trac = componentsProps.track) == null ? void 0 : _componentsProps$trac.className)\n  }), ownerState);\n  return /*#__PURE__*/_jsxs(Root, _extends({\n    ref: ref\n  }, rootProps, {\n    children: [/*#__PURE__*/_jsx(Track, _extends({}, trackProps)), /*#__PURE__*/_jsx(Thumb, _extends({}, thumbProps)), /*#__PURE__*/_jsx(Input, _extends({}, inputProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwitchUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the Root slot.\n   * Either a string to use a HTML element or a component.\n   * This is equivalent to `components.Root`. If both are provided, the `component` is used.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Switch.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    Input: PropTypes.elementType,\n    Root: PropTypes.elementType,\n    Thumb: PropTypes.elementType,\n    Track: PropTypes.oneOfType([PropTypes.elementType, PropTypes.oneOf([null])])\n  }),\n\n  /**\n   * The props used for each slot inside the Switch.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    input: PropTypes.object,\n    root: PropTypes.object,\n    thumb: PropTypes.object,\n    track: PropTypes.object\n  }),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default SwitchUnstyled;","map":{"version":3,"sources":["/Users/harold/projects/Meant/chambeaya_frontend/node_modules/@mui/base/SwitchUnstyled/SwitchUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","useSwitch","classes","appendOwnerState","jsx","_jsx","jsxs","_jsxs","SwitchUnstyled","forwardRef","props","ref","_ref","_componentsProps$root","_components$Thumb","_componentsProps$thum","_components$Input","_componentsProps$inpu","_components$Track","_componentsProps$trac","checkedProp","checked","className","component","components","componentsProps","defaultChecked","disabledProp","disabled","onBlur","onChange","onFocus","onFocusVisible","readOnlyProp","readOnly","otherProps","useSwitchProps","getInputProps","focusVisible","ownerState","stateClasses","Root","rootProps","root","Thumb","thumbProps","thumb","Input","inputProps","input","Track","trackProps","track","children","process","env","NODE_ENV","propTypes","bool","string","elementType","shape","oneOfType","oneOf","object","func","required"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"checked\", \"className\", \"component\", \"components\", \"componentsProps\", \"defaultChecked\", \"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useSwitch from './useSwitch';\nimport classes from './switchUnstyledClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/**\n * The foundation for building custom-styled switches.\n *\n * Demos:\n *\n * - [Switch](https://mui.com/base/react-switch/)\n *\n * API:\n *\n * - [SwitchUnstyled API](https://mui.com/base/api/switch-unstyled/)\n */\nconst SwitchUnstyled = /*#__PURE__*/React.forwardRef(function SwitchUnstyled(props, ref) {\n  var _ref, _componentsProps$root, _components$Thumb, _componentsProps$thum, _components$Input, _componentsProps$inpu, _components$Track, _componentsProps$trac;\n\n  const {\n    checked: checkedProp,\n    className,\n    component,\n    components = {},\n    componentsProps = {},\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly: readOnlyProp\n  } = props,\n        otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const useSwitchProps = {\n    checked: checkedProp,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly: readOnlyProp\n  };\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  } = useSwitch(useSwitchProps);\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  });\n\n  const stateClasses = clsx(checked && classes.checked, disabled && classes.disabled, focusVisible && classes.focusVisible, readOnly && classes.readOnly);\n  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'span';\n  const rootProps = appendOwnerState(Root, _extends({}, otherProps, componentsProps.root, {\n    className: clsx(classes.root, stateClasses, className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className)\n  }), ownerState);\n  const Thumb = (_components$Thumb = components.Thumb) != null ? _components$Thumb : 'span';\n  const thumbProps = appendOwnerState(Thumb, _extends({}, componentsProps.thumb, {\n    className: clsx(classes.thumb, (_componentsProps$thum = componentsProps.thumb) == null ? void 0 : _componentsProps$thum.className)\n  }), ownerState);\n  const Input = (_components$Input = components.Input) != null ? _components$Input : 'input';\n  const inputProps = appendOwnerState(Input, _extends({}, getInputProps(), componentsProps.input, {\n    className: clsx(classes.input, (_componentsProps$inpu = componentsProps.input) == null ? void 0 : _componentsProps$inpu.className)\n  }), ownerState);\n  const Track = components.Track === null ? () => null : (_components$Track = components.Track) != null ? _components$Track : 'span';\n  const trackProps = appendOwnerState(Track, _extends({}, componentsProps.track, {\n    className: clsx(classes.track, (_componentsProps$trac = componentsProps.track) == null ? void 0 : _componentsProps$trac.className)\n  }), ownerState);\n  return /*#__PURE__*/_jsxs(Root, _extends({\n    ref: ref\n  }, rootProps, {\n    children: [/*#__PURE__*/_jsx(Track, _extends({}, trackProps)), /*#__PURE__*/_jsx(Thumb, _extends({}, thumbProps)), /*#__PURE__*/_jsx(Input, _extends({}, inputProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwitchUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the Root slot.\n   * Either a string to use a HTML element or a component.\n   * This is equivalent to `components.Root`. If both are provided, the `component` is used.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Switch.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    Input: PropTypes.elementType,\n    Root: PropTypes.elementType,\n    Thumb: PropTypes.elementType,\n    Track: PropTypes.oneOfType([PropTypes.elementType, PropTypes.oneOf([null])])\n  }),\n\n  /**\n   * The props used for each slot inside the Switch.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    input: PropTypes.object,\n    root: PropTypes.object,\n    thumb: PropTypes.object,\n    track: PropTypes.object\n  }),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default SwitchUnstyled;"]},"metadata":{},"sourceType":"module"}