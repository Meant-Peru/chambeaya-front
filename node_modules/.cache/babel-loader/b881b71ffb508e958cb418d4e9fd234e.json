{"ast":null,"code":"import _toConsumableArray from\"/Users/harold/projects/Meant/chambeaya_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/harold/projects/Meant/chambeaya_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/harold/projects/Meant/chambeaya_frontend/node_modules/@babel/runtime/regenerator/index.js\";import{useDispatch}from'react-redux';import{useNavigate}from'react-router-dom';import{LIST_SUCCESS}from'../helpers/constants';import{loadCompanies}from'../redux/slices/salesSlice';import{getSalesCompanies}from'../util/sales.service';export var useSales=function useSales(){var navigate=useNavigate();var dispatch=useDispatch();var startGetCompanies=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$getSalesCompan,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getSalesCompanies();case 3:_yield$getSalesCompan=_context.sent;data=_yield$getSalesCompan.data;if(data.message===LIST_SUCCESS){dispatch(loadCompanies({companies:_toConsumableArray(data.data.dataUsers)}));}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);alert('ERROR LISTAR LAS EMPRESAS');case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function startGetCompanies(){return _ref.apply(this,arguments);};}();return{startGetCompanies:startGetCompanies};};","map":{"version":3,"sources":["/Users/harold/projects/Meant/chambeaya_frontend/src/hooks/useSales.tsx"],"names":["useDispatch","useNavigate","LIST_SUCCESS","loadCompanies","getSalesCompanies","useSales","navigate","dispatch","startGetCompanies","data","message","companies","dataUsers","alert"],"mappings":"0ZACA,OAASA,WAAT,KAA4B,aAA5B,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,YAAT,KAA6B,sBAA7B,CACA,OAASC,aAAT,KAA8B,4BAA9B,CACA,OAASC,iBAAT,KAAkC,uBAAlC,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAC7B,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,GAAMQ,CAAAA,iBAAiB,0FAAG,wMAEDJ,CAAAA,iBAAiB,EAFhB,4CAEhBK,IAFgB,uBAEhBA,IAFgB,CAGxB,GAAIA,IAAI,CAACC,OAAL,GAAiBR,YAArB,CAAmC,CAClCK,QAAQ,CAACJ,aAAa,CAAC,CAAEQ,SAAS,oBAAMF,IAAI,CAACA,IAAL,CAAUG,SAAhB,CAAX,CAAD,CAAd,CAAR,CACA,CALuB,+EAOxBC,KAAK,CAAC,2BAAD,CAAL,CAPwB,oEAAH,kBAAjBL,CAAAA,iBAAiB,0CAAvB,CAWA,MAAO,CACNA,iBAAiB,CAAjBA,iBADM,CAAP,CAGA,CAlBM","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { LIST_SUCCESS } from '../helpers/constants';\nimport { loadCompanies } from '../redux/slices/salesSlice';\nimport { getSalesCompanies } from '../util/sales.service';\n\nexport const useSales = () => {\n\tconst navigate = useNavigate();\n\tconst dispatch = useDispatch();\n\n\tconst startGetCompanies = async () => {\n\t\ttry {\n\t\t\tconst { data } = await getSalesCompanies();\n\t\t\tif (data.message === LIST_SUCCESS) {\n\t\t\t\tdispatch(loadCompanies({ companies: [...data.data.dataUsers] }));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\talert('ERROR LISTAR LAS EMPRESAS');\n\t\t}\n\t};\n\n\treturn {\n\t\tstartGetCompanies,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}